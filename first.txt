#列表元素最后翻转速度快于一开始插入一个个插入到前面
import datetime

count = 10**5
nums = []

starttime = datetime.datetime.now()
#long running
for i in range(count):
    nums.append(i)
nums.reverse()
endtime = datetime.datetime.now()
print( (endtime - starttime).microseconds)
#结果：10026

count = 10**5
nums = []
starttime = datetime.datetime.now()
#long running
for i in range(count):
    nums.insert(0,i)
endtime = datetime.datetime.now()
print( (endtime - starttime).microseconds)
#结果：559471


#list.sort(),shuffle数组 arr[index]是返回新的对象，所以在自动垃圾回收机制下未来得及清理，会出现内存不够情况

#mutators or updata methods:
	list.sor() arr[index] string.lower返回新的对象

#set 比 list判断是否存在某个元素更加高效

#连续赋值产生更少的临时变量
def fibonacci():
    a,b=0,1
    while True:
        yield a
	a,b=b,a+b


#int 是动态长度
#列表每4个元素占32字节（不足4个也是32字节）(未考虑一个元素本身字节数超过8字节），空列表占64字节
import sys
data=[]
for k in range（20):
    a=len(data)
    b=sys.getsizeof(data)
    print("data:",data)
    print("length:",a,"size:",b)
    data.append(None)

